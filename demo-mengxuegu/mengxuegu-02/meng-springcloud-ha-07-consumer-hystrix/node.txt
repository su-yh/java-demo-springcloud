Hystrix: 熔煅器，断路器
    它其实就是对异常的捕获与处理。
    它不仅可以在服务的提供方直接处理异常，还可以在客户端调用服务的时候使用熔煅器来处理服务提供方的异常。

这个服务的示例是在客户端调用的时候处理异常。使用熔煅器的fallback
    1. 需要添加配置：
        # 需要开启 hystrix
        feign:
          hystrix:
            enabled: true
    2. 要在已存在的 ProductClientService 接口上的 @FeignClient 注解，
        并且为这个注解添加属性 fallback，用来指定熔煅处理的实际类。
        这种处理方法实际上是一种面向接口编程的思想。
            @FeignClient(value = "MICROSERVICE-PRODUCT", fallback = ProductClientServiceFallBack.class)
            public interface ProductClientService { ... }
    3. 实现这个熔煅处理实际类，这个类需要implements ProductClientService，并且这个类要实现为一个SpringBean 对象。
        这里面的每一个接口方法的实现就是对每个接口调用的熔煅处理。
        @Component
        ProductClientServiceFallBack implements ProductClientService { ... }

在测试的时候最好不要与 provider-hystrix 服务进行连接，而是直接与provider 服务进行连接。
